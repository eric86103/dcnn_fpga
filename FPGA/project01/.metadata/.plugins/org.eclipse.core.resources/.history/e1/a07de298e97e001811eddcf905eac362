/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */
#include "system.h"
#include "./HAL/inc/nios2.h"
#include <stdio.h>
#include "io.h"
void printBinary(alt_u32 n){
  while (n) {
      if (n & 1)
          printf("1");
      else
          printf("0");

      n >>= 1;
  }
  printf("\n");
}

int main()
{
  printf("Hello from Nios II!\n");
  alt_u32 data[2][9] = {0};
  int i = 0;
  int j = 0;
  int k = 0;
  for(i = 0; i < 9; i ++){
    for(j = 0; j < 2; j++){
      for(k = 0; k < 4; k ++)
        data[j][i] += (alt_u32)64 << 8*k;
      printf("data %d %d = ", j, i);
      printBinary(data[j][i]);
    }
  }
  alt_u32 result[4] = {0};
  printf("123\n");
/*
  for(i = 0; i < 9; i ++) {
    for( j = 0; j < 2; ++j) {
      IOWR(TEST_SLAVE_0_BASE, 0, data[j][i]);
    }
  }
  for(i = 0; i < 4; i ++) {
    printf("%d, %d\n", i+1, result[i]);
    result[i] = IORD(TEST_SLAVE_0_BASE, 0);
    printBinary(result[i]);
  }
  */
  return 0;
}
